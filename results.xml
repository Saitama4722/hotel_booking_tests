<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="3" skipped="0" tests="7" time="5.275" timestamp="2024-07-23T19:30:47.853973" hostname="DESKTOP-5KB2LCM"><testcase classname="tests.test_auth" name="test_auth_success" time="0.904" /><testcase classname="tests.test_auth" name="test_auth_failure" time="0.657" /><testcase classname="tests.test_create_booking" name="test_create_booking_success" time="0.660"><failure message="assert 500 == 200&#10; +  where 500 = &lt;Response [500]&gt;.status_code">url = 'https://restful-booker.herokuapp.com'

    def test_create_booking_success(url):
        response = requests.post(f"{url}/booking", json={})
&gt;       assert response.status_code == 200
E       assert 500 == 200
E        +  where 500 = &lt;Response [500]&gt;.status_code

tests\test_create_booking.py:5: AssertionError</failure></testcase><testcase classname="tests.test_create_booking" name="test_create_booking_failure" time="0.667"><failure message="assert 200 == 400&#10; +  where 200 = &lt;Response [200]&gt;.status_code">url = 'https://restful-booker.herokuapp.com'

    def test_create_booking_failure(url):
        data = {
            "firstname": "Jim",
            "lastname": "Brown",
            "totalprice": 111,
            "depositpaid": "not-boolean",
            "bookingdates": {
                "checkin": "2024-07-14",
                "checkout": "2024-07-15"
            },
            "additionalneeds": "Breakfast"
        }
        response = requests.post(f"{url}/booking", json=data)
&gt;       assert response.status_code == 400
E       assert 200 == 400
E        +  where 200 = &lt;Response [200]&gt;.status_code

tests\test_create_booking.py:20: AssertionError</failure></testcase><testcase classname="tests.test_create_booking" name="test_create_booking_failure_missing_field" time="0.656"><failure message="assert 500 == 400&#10; +  where 500 = &lt;Response [500]&gt;.status_code">url = 'https://restful-booker.herokuapp.com'

    def test_create_booking_failure_missing_field(url):
        data = {
            "lastname": "Brown",
            "totalprice": 111,
            "depositpaid": True,
            "bookingdates": {
                "checkin": "2024-07-14",
                "checkout": "2024-07-15"
            },
            "additionalneeds": "Breakfast"
        }
        response = requests.post(f"{url}/booking", json=data)
&gt;       assert response.status_code == 400
E       assert 500 == 400
E        +  where 500 = &lt;Response [500]&gt;.status_code

tests\test_create_booking.py:34: AssertionError</failure></testcase><testcase classname="tests.test_get_booking" name="test_get_booking_success" time="0.660" /><testcase classname="tests.test_get_booking" name="test_get_booking_failure" time="0.666" /></testsuite></testsuites>